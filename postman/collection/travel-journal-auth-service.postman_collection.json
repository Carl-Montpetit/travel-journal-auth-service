{
	"info": {
		"_postman_id": "fae4bd4c-6ccc-45d7-81c9-145b90e29e84",
		"name": "travel-journal-auth-service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25667684"
	},
	"item": [
		{
			"name": "register",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"// Generate random values and store them as collection variables",
							"pm.collectionVariables.set(\"username\", pm.variables.replaceIn(\"{{$randomUserName}}\"));",
							"pm.collectionVariables.set(\"password\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
							"pm.collectionVariables.set(\"email\", pm.variables.replaceIn(\"{{$randomEmail}}\"));",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"{{password}}\",\n    \"email\": \"{{email}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Check if the response object exists",
							"if (pm.response) {",
							"    // Check the response status",
							"    if (pm.response.status === 'OK') {  // Alternative check: pm.response.code === 200",
							"        try {",
							"            // Parse the response body as JSON",
							"            var jsonData = pm.response.json();",
							"",
							"            // Ensure the token exists in the response",
							"            if (jsonData.token) {",
							"                // Store the token as a collection variable",
							"                pm.collectionVariables.set(\"jwt_token\", jsonData.token);",
							"                console.log(\"JWT Token set in collection variable: \" + jsonData.token);",
							"            } else {",
							"                console.log(\"Token not found in the response.\");",
							"            }",
							"        } catch (e) {",
							"            console.log(\"Error parsing JSON response: \" + e.message);",
							"        }",
							"    } else {",
							"        console.log(\"Failed to retrieve token. Response status: \" + pm.response.status);",
							"    }",
							"} else {",
							"    console.log(\"Response is undefined.\");",
							"}",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{username}}\",\n  \"password\": \"{{password}}\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "refresh token",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"token\": \"{{jwt_token}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/refresh-token",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"refresh-token"
					]
				}
			},
			"response": []
		},
		{
			"name": "user by username",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/auth/user/{{username}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"user",
						"{{username}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"{{$randomUserName}}\",\n  \"password\": \"{{$randomPassword}}\",\n  \"email\": \"{{$randomEmail}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/update-user",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"update-user"
					]
				}
			},
			"response": []
		},
		{
			"name": "reset password",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"{{username}}\",\n    \"password\": \"newPassword\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/auth/reset-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"reset-password"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "username",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		}
	]
}